---
- name: Ensure /opt/Chuckbot exists (root)
  become: true
  file:
    path: /opt/Chuckbot
    state: directory
    owner: dave
    group: dave
    mode: '0755'

- name: Check if /opt/Chuckbot is a Git repo (as dave)
  become: true
  become_user: dave
  stat:
    path: /opt/Chuckbot/.git
  register: chuckbot_git

- name: Get current remote if it exists (as dave)
  become: true
  become_user: dave
  command: git remote get-url origin
  args:
    chdir: /opt/Chuckbot
  register: git_remote
  when: chuckbot_git.stat.exists
  failed_when: false
  changed_when: false

- name: Clone repo if not present or invalid (as dave)
  become: true
  become_user: dave
  git:
    repo: git@github.com:dmzoneill/Chuckbot.git
    dest: /opt/Chuckbot
    version: main
    update: yes
    force: yes
  when: not chuckbot_git.stat.exists or git_remote.stdout != "git@github.com:dmzoneill/Chuckbot.git"

- name: Always pull latest from origin with rebase (as dave)
  become: true
  become_user: dave
  command: git pull --rebase
  args:
    chdir: /opt/Chuckbot
  when:
    - chuckbot_git.stat.exists
    - git_remote.stdout == "git@github.com:dmzoneill/Chuckbot.git"

- name: Run npm ci in /opt/Chuckbot (as dave)
  become: true
  become_user: dave
  command: npm ci
  args:
    chdir: /opt/Chuckbot
  environment:
    HOME: "/home/dave"
  register: npm_result
  changed_when: "'added' in npm_result.stdout or 'updated' in npm_result.stdout"

- name: Ensure ~/.config/systemd/user directory exists (as dave)
  become: true
  become_user: dave
  file:
    path: "/home/dave/.config/systemd/user"
    state: directory
    mode: '0755'

- name: Copy chuckbot.service to systemd user dir (as dave)
  become: true
  become_user: dave
  copy:
    src: /opt/Chuckbot/systemd/chuckbot.service
    dest: "/home/dave/.config/systemd/user/chuckbot.service"
    mode: '0644'

- name: Reload user systemd daemon (as dave)
  become: true
  become_user: dave
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ lookup('ansible.builtin.pipe', 'id -u dave') }}"
    DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/{{ lookup('ansible.builtin.pipe', 'id -u dave') }}/bus"
  command: systemctl --user daemon-reexec

- name: Enable chuckbot service (as dave)
  become: true
  become_user: dave
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ lookup('ansible.builtin.pipe', 'id -u dave') }}"
    DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/{{ lookup('ansible.builtin.pipe', 'id -u dave') }}/bus"
  command: systemctl --user enable chuckbot.service

- name: Restart chuckbot service (as dave)
  become: true
  become_user: dave
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ lookup('ansible.builtin.pipe', 'id -u dave') }}"
    DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/{{ lookup('ansible.builtin.pipe', 'id -u dave') }}/bus"
  command: systemctl --user restart chuckbot.service
