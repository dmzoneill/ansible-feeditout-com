---
- name: Install Postfix
  apt:
    name: postfix
    state: present
    update_cache: true

- name: Ensure /etc/postfix exists
  file:
    path: /etc/postfix
    state: directory
    mode: '0755'

- name: Recursively copy Postfix configuration to /etc/postfix
  copy:
    src: "{{ role_path }}/files/"
    dest: /etc/
    owner: root
    group: root
    mode: preserve
    directory_mode: '0755'
  notify: Restart postfix

- name: Run postfix check (ignore error if Postfix not fully initialized)
  command: postfix check
  ignore_errors: true
  changed_when: false

# --- Cert Hook Script ---

- name: Install postfix-updatecerts script from static file
  copy:
    src: postfix-updatecerts.sh
    dest: /usr/bin/postfix-updatecerts
    mode: '0755'
    owner: root
    group: root

# --- Map Builder ---

- name: Define list of postfix map files
  set_fact:
    postfix_maps:
      - { src: "aliases", tool: "postalias" }
      - { src: "sender_access", tool: "postmap" }
      - { src: "sender_checks", tool: "postmap" }
      - { src: "sasl_passwd", tool: "postmap" }
      - { src: "client_checks", tool: "postmap" }
      - { src: "header_checks", tool: "postmap" }
      - { src: "bcc_maps", tool: "postmap" }
      - { src: "recipient_domains", tool: "postmap" }
      - { src: "vhosts", tool: "postmap" }

- name: Rebuild postfix maps if source file exists
  command: "{{ map_file.tool }} hash:/etc/postfix/{{ map_file.src }}"
  args:
    creates: "/etc/postfix/{{ map_file.src }}.db"
  loop: "{{ postfix_maps }}"
  loop_control:
    loop_var: map_file
  notify: Restart postfix

# --- Systemd Management (idempotent) ---

- name: Reexec systemd only if systemd binary has changed
  command: systemctl daemon-reexec
  changed_when: false
  when: ansible_service_mgr == "systemd"

- name: Reload systemd daemon config if needed
  command: systemctl daemon-reload
  changed_when: false
  when: ansible_service_mgr == "systemd"

- name: Ensure postfix@- is enabled
  systemd:
    name: postfix@-
    enabled: true
  when: ansible_service_mgr == "systemd"

- name: Ensure postfix@- is started
  systemd:
    name: postfix@-
    state: started
  when: ansible_service_mgr == "systemd"

- name: Restart postfix@- only if config changed
  systemd:
    name: postfix@-
    state: restarted
  when: ansible_service_mgr == "systemd"
  listen: Restart postfix
