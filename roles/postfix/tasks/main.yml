---
- name: Install Postfix
  apt:
    name: postfix
    state: present
    update_cache: true

- name: Ensure /etc/postfix exists
  file:
    path: /etc/postfix
    state: directory
    mode: '0755'

- name: Recursively copy Postfix configuration to /etc/postfix
  copy:
    src: "{{ role_path }}/files/"
    dest: /etc/
    owner: root
    group: root
    mode: preserve
    directory_mode: '0755'
  register: postfix_file_copy_result

- name: Set fact if postfix config changed
  set_fact:
    postfix_files_changed: "{{ postfix_file_copy_result is changed }}"

- name: Render virtualalias file if defined
  template:
    src: virtualaliases.j2
    dest: /etc/postfix/virtualalias
    owner: root
    group: root
    mode: '0644'
  when: virtualaliases is defined
  register: virtualaliases_result

- name: Update changed flag if virtualaliases changed
  set_fact:
    postfix_files_changed: true
  when: virtualaliases_result is changed

- name: Run postfix check (ignore error if Postfix not fully initialized)
  command: postfix check
  ignore_errors: true
  changed_when: false

# --- Systemd Integration ---

- name: Ensure systemd is reloaded if needed
  command: systemctl daemon-reexec
  changed_when: false

- name: Enable postfix@- instance if not already enabled
  command: systemctl is-enabled postfix@-
  register: postfix_instance_enabled
  failed_when: false
  changed_when: false

- name: Enable postfix@- if not enabled
  command: systemctl enable postfix@-
  when: postfix_instance_enabled.rc != 0

- name: Start postfix@- if not already running
  command: systemctl is-active postfix@-
  register: postfix_instance_active
  failed_when: false
  changed_when: false

- name: Start postfix@- instance
  command: systemctl start postfix@-
  when: postfix_instance_active.rc != 0

# --- Cert Hook Script ---

- name: Install postfix-updatecerts script from static file
  copy:
    src: postfix-updatecerts.sh
    dest: /usr/bin/postfix-updatecerts
    mode: '0755'
    owner: root
    group: root

# --- Chroot File Sync ---

- name: Define list of files to sync into postfix chroot
  set_fact:
    postfix_chroot_files:
      - { src: "/etc/passwd", dest: "/var/spool/postfix/etc/passwd", mode: "0644" }
      - { src: "/etc/group", dest: "/var/spool/postfix/etc/group", mode: "0644" }

- name: Sync critical files into postfix chroot
  copy:
    src: "{{ chroot_file.src }}"
    dest: "{{ chroot_file.dest }}"
    owner: root
    group: root
    mode: "{{ chroot_file.mode }}"
  loop: "{{ postfix_chroot_files }}"
  loop_control:
    loop_var: chroot_file

# --- Map Rebuild Logic ---

- name: Define list of postfix map files
  set_fact:
    postfix_maps:
      - { src: "sasl_passwd", tool: "postmap" }
      - { src: "header_checks", tool: "postmap" }
      - { src: "virtualaliases", tool: "postmap" }

- name: Rebuild postfix maps only if config files changed
  command: "{{ map_entry.tool }} hash:/etc/postfix/{{ map_entry.src }}"
  loop: "{{ postfix_maps }}"
  loop_control:
    loop_var: map_entry
  when: postfix_files_changed | default(false)
  register: map_build_result

# --- update certs if anything has changed ---

- name: Update sni and certs
  command: /usr/bin/postfix-updatecerts
  when: postfix_files_changed | default(false)

# --- Restart Postfix Only If Files Changed ---

- name: Restart Postfix if files changed
  service:
    name: postfix
    state: restarted
  when: postfix_files_changed | default(false)
