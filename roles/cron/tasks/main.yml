---
- name: Ensure cron is installed
  apt:
    name: cron
    state: present
    update_cache: true

- name: Initialize list of crontabs needing update
  set_fact:
    crontabs_to_update: []

- name: Check if crontab file for each user needs update
  vars:
    rendered_crontab: "{{ lookup('template', item.src) }}"
  block:
    - name: Slurp existing crontab file
      slurp:
        path: "/var/spool/cron/crontabs/{{ item.user }}"
      register: existing_crontab_raw
      ignore_errors: true

    - name: Append to update list if file differs or missing
      set_fact:
        crontabs_to_update: "{{ crontabs_to_update + [item] }}"
      when: >
        existing_crontab_raw.failed or
        rendered_crontab != (existing_crontab_raw.content | b64decode)
  loop: "{{ cron_user_files }}"
  loop_control:
    label: "{{ item.user }}"

- name: Stop cron if crontabs need update
  systemd:
    name: cron
    state: stopped
    enabled: true
  when: crontabs_to_update | length > 0

- name: Apply crontab templates that need updating
  template:
    src: "{{ cron.src }}"
    dest: "/var/spool/cron/crontabs/{{ cron.user }}"
    owner: "{{ cron.user }}"
    group: crontab
    mode: '0600'
  loop: "{{ crontabs_to_update }}"
  loop_control:
    loop_var: cron

- name: Start and enable cron if any crontabs updated
  systemd:
    name: cron
    state: started
    enabled: true
  when: crontabs_to_update | length > 0
