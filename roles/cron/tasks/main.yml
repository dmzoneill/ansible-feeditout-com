---
- name: Ensure cron is installed
  apt:
    name: cron
    state: present
    update_cache: true

- name: Initialize list of crontabs needing update
  set_fact:
    crontabs_to_update: []

- name: Slurp existing crontab files
  slurp:
    path: "/var/spool/cron/crontabs/{{ item.user }}"
  loop: "{{ cron_user_files }}"
  register: existing_crontabs
  ignore_errors: true

- name: Compare rendered templates and collect ones needing update
  set_fact:
    crontabs_to_update: "{{ crontabs_to_update + [cron_user_files[idx]] }}"
  when: >
    item.failed or
    (lookup('template', cron_user_files[idx].src) != (item.content | b64decode))
  loop: "{{ existing_crontabs.results }}"
  loop_control:
    index_var: idx

- name: Stop cron if crontabs need update
  systemd:
    name: cron
    state: stopped
    enabled: true
  when: crontabs_to_update | length > 0

- name: Apply crontab templates that need updating
  template:
    src: "{{ item.src }}"
    dest: "/var/spool/cron/crontabs/{{ item.user }}"
    owner: "{{ item.user }}"
    group: crontab
    mode: '0600'
  loop: "{{ crontabs_to_update }}"

- name: Start and enable cron if any crontabs updated
  systemd:
    name: cron
    state: started
    enabled: true
  when: crontabs_to_update | length > 0
