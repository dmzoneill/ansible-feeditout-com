#!/bin/bash
set -uo pipefail  # Do not use -e so we can handle errors gracefully

# Configurable variables
SRC_PATHS="/etc /opt /root /home /usr/local /srv /var/log /boot /var/lib/mysql"
STAGING="/tmp/backup-staging"
BACKUP_ROOT="/tmp/system-backup"
TAR_FILE="$BACKUP_ROOT/system.tar.gz"
MYSQL_DUMP_FILE="$BACKUP_ROOT/mysqldump/backup.sql"
DEST="google-backup:server-backup-$(hostname -s)"
DATE=$(date +"%Y-%m-%d")
LOGFILE="/var/log/rclone-backup.log"
MYSQL_PASS="{{ mysql_root }}"

echo "Starting backup at $(date)" | tee -a "$LOGFILE"
echo "Using backup destination: $DEST" | tee -a "$LOGFILE"

# Prepare directories
mkdir -p "$BACKUP_ROOT/mysqldump"
mkdir -p "$STAGING"

# Dump MySQL databases
echo "Dumping MySQL databases..." | tee -a "$LOGFILE"
mysqldump --all-databases -u root -p"$MYSQL_PASS" > "$MYSQL_DUMP_FILE"

# Rsync source paths to staging directory
echo "Copying files to staging area: $STAGING" | tee -a "$LOGFILE"
for path in $SRC_PATHS; do
  name=$(echo "$path" | sed 's|/|_|g' | sed 's|^_||')
  echo "Rsyncing $path to $STAGING/$name" | tee -a "$LOGFILE"
  rsync -aHAX --delete "$path/" "$STAGING/$name/"
done

# Create tarball from staging directory
echo "Creating tarball $TAR_FILE" | tee -a "$LOGFILE"
tar -czpf "$TAR_FILE" -C "$STAGING" . || echo "Warning: tar encountered errors" | tee -a "$LOGFILE"

# Upload system tarball
echo "Uploading system tarball to $DEST/$DATE/system" | tee -a "$LOGFILE"
rclone copy "$TAR_FILE" "$DEST/$DATE/system" \
  --log-level INFO \
  --log-file="$LOGFILE"

# Upload MySQL dump
echo "Uploading MySQL dump to $DEST/$DATE/mysqldump" | tee -a "$LOGFILE"
rclone copy "$(dirname "$MYSQL_DUMP_FILE")" "$DEST/$DATE/mysqldump" \
  --log-level INFO \
  --log-file="$LOGFILE"

# Retention: keep only the most recent 7 backups
echo "Applying retention policy (keep 7 latest backups)" | tee -a "$LOGFILE"
rclone lsf "$DEST" --dirs-only | sort | head -n -7 | while read -r olddir; do
  echo "Deleting old backup folder: $DEST/$olddir" | tee -a "$LOGFILE"
  rclone purge "$DEST/$olddir" \
    --log-level INFO \
    --log-file="$LOGFILE"
done

# Cleanup temporary files
echo "Cleaning up temporary files" | tee -a "$LOGFILE"
rm -rf "$BACKUP_ROOT" "$STAGING"

echo "Backup completed at $(date)" | tee -a "$LOGFILE"
