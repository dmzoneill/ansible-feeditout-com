---
- name: Ensure iptables-persistent is installed
  apt:
    name: iptables-persistent
    state: present
    update_cache: true

- name: Define iptables command variants
  set_fact:
    iptables_cmds:
      - iptables
      - ip6tables

- name: Ensure ANSIBLE_INPUT chain exists for iptables
  command: iptables -N ANSIBLE_INPUT
  register: create_ansible_input_v4
  failed_when: false
  changed_when: create_ansible_input_v4.rc == 0

- name: Ensure ANSIBLE_OUTPUT chain exists for iptables
  command: iptables -N ANSIBLE_OUTPUT
  register: create_ansible_output_v4
  failed_when: false
  changed_when: create_ansible_output_v4.rc == 0

- name: Ensure ANSIBLE_INPUT chain exists for ip6tables
  command: ip6tables -N ANSIBLE_INPUT
  register: create_ansible_input_v6
  failed_when: false
  changed_when: create_ansible_input_v6.rc == 0

- name: Ensure ANSIBLE_OUTPUT chain exists for ip6tables
  command: ip6tables -N ANSIBLE_OUTPUT
  register: create_ansible_output_v6
  failed_when: false
  changed_when: create_ansible_output_v6.rc == 0

- name: Ensure INPUT jumps to ANSIBLE_INPUT (iptables)
  command: iptables -C INPUT -j ANSIBLE_INPUT
  register: check_jump_input_v4
  failed_when: false
  changed_when: false

- name: Insert jump to ANSIBLE_INPUT if missing (iptables)
  command: iptables -I INPUT 1 -j ANSIBLE_INPUT
  when: check_jump_input_v4.rc != 0

- name: Ensure OUTPUT jumps to ANSIBLE_OUTPUT (iptables)
  command: iptables -C OUTPUT -j ANSIBLE_OUTPUT
  register: check_jump_output_v4
  failed_when: false
  changed_when: false

- name: Insert jump to ANSIBLE_OUTPUT if missing (iptables)
  command: iptables -I OUTPUT 1 -j ANSIBLE_OUTPUT
  when: check_jump_output_v4.rc != 0

- name: Ensure INPUT jumps to ANSIBLE_INPUT (ip6tables)
  command: ip6tables -C INPUT -j ANSIBLE_INPUT
  register: check_jump_input_v6
  failed_when: false
  changed_when: false

- name: Insert jump to ANSIBLE_INPUT if missing (ip6tables)
  command: ip6tables -I INPUT 1 -j ANSIBLE_INPUT
  when: check_jump_input_v6.rc != 0

- name: Ensure OUTPUT jumps to ANSIBLE_OUTPUT (ip6tables)
  command: ip6tables -C OUTPUT -j ANSIBLE_OUTPUT
  register: check_jump_output_v6
  failed_when: false
  changed_when: false

- name: Insert jump to ANSIBLE_OUTPUT if missing (ip6tables)
  command: ip6tables -I OUTPUT 1 -j ANSIBLE_OUTPUT
  when: check_jump_output_v6.rc != 0

- name: Get current ANSIBLE_INPUT rules
  command: iptables -S ANSIBLE_INPUT
  register: current_ansible_input_rules

- name: Get current ANSIBLE_OUTPUT rules
  command: iptables -S ANSIBLE_OUTPUT
  register: current_ansible_output_rules

- name: Get current ANSIBLE_INPUT rules (IPv6)
  command: ip6tables -S ANSIBLE_INPUT
  register: current_ansible_input_v6_rules

- name: Get current ANSIBLE_OUTPUT rules (IPv6)
  command: ip6tables -S ANSIBLE_OUTPUT
  register: current_ansible_output_v6_rules

- name: Build expected INPUT rules
  set_fact:
    expected_input_rule_lines: >-
      {{
        ansible_input_rules | map('iptables_build_rule', 'ANSIBLE_INPUT') | list
      }}

- name: Build expected OUTPUT rules
  set_fact:
    expected_output_rule_lines: >-
      {{
        ansible_output_rules | map('iptables_build_rule', 'ANSIBLE_OUTPUT') | list
      }}

- name: Remove extra ANSIBLE_INPUT rules (iptables)
  shell: "iptables {{ rule | regex_replace('^-A', '-D') }}"
  loop: "{{ current_ansible_input_rules.stdout_lines | difference(expected_input_rule_lines) }}"
  loop_control:
    loop_var: rule
  when: rule is search('-A ANSIBLE_INPUT')
  failed_when: false

- name: Add missing ANSIBLE_INPUT rules (iptables)
  shell: "iptables {{ rule }}"
  loop: "{{ expected_input_rule_lines | difference(current_ansible_input_rules.stdout_lines) }}"
  loop_control:
    loop_var: rule
  when: rule is search('-A ANSIBLE_INPUT')
  failed_when: false

- name: Remove extra ANSIBLE_INPUT rules (ip6tables)
  shell: "ip6tables {{ rule | regex_replace('^-A', '-D') }}"
  loop: "{{ current_ansible_input_v6_rules.stdout_lines | difference(expected_input_rule_lines) }}"
  loop_control:
    loop_var: rule
  when: rule is search('-A ANSIBLE_INPUT')
  failed_when: false

- name: Add missing ANSIBLE_INPUT rules (ip6tables)
  shell: "ip6tables {{ rule }}"
  loop: "{{ expected_input_rule_lines | difference(current_ansible_input_v6_rules.stdout_lines) }}"
  loop_control:
    loop_var: rule
  when: rule is search('-A ANSIBLE_INPUT')
  failed_when: false

- name: Remove extra ANSIBLE_OUTPUT rules (iptables)
  shell: "iptables {{ rule | regex_replace('^-A', '-D') }}"
  loop: "{{ current_ansible_output_rules.stdout_lines | difference(expected_output_rule_lines) }}"
  loop_control:
    loop_var: rule
  when: rule is search('-A ANSIBLE_OUTPUT')
  failed_when: false

- name: Add missing ANSIBLE_OUTPUT rules (iptables)
  shell: "iptables {{ rule }}"
  loop: "{{ expected_output_rule_lines | difference(current_ansible_output_rules.stdout_lines) }}"
  loop_control:
    loop_var: rule
  when: rule is search('-A ANSIBLE_OUTPUT')

- name: Remove extra ANSIBLE_OUTPUT rules (ip6tables)
  shell: "ip6tables {{ rule | regex_replace('^-A', '-D') }}"
  loop: "{{ current_ansible_output_v6_rules.stdout_lines | difference(expected_output_rule_lines) }}"
  loop_control:
    loop_var: rule
  when: rule is search('-A ANSIBLE_OUTPUT')
  failed_when: false

- name: Add missing ANSIBLE_OUTPUT rules (ip6tables)
  shell: "ip6tables {{ rule }}"
  loop: "{{ expected_output_rule_lines | difference(current_ansible_output_v6_rules.stdout_lines) }}"
  loop_control:
    loop_var: rule
  when: rule is search('-A ANSIBLE_OUTPUT')

- name: Prune unmanaged INPUT rules (iptables)
  shell: |
    iptables -S INPUT | grep -v 'DOCKER\|f2b\|ANSIBLE_INPUT' | grep '\-A INPUT' | while read rule; do
      iptables $(echo "$rule" | sed 's/^-A/-D/')
    done
  args:
    executable: /bin/bash
  changed_when: false
  failed_when: false

- name: Prune unmanaged INPUT rules (ip6tables)
  shell: |
    ip6tables -S INPUT | grep -v 'DOCKER\|f2b\|ANSIBLE_INPUT' | grep '\-A INPUT' | while read rule; do
      ip6tables $(echo "$rule" | sed 's/^-A/-D/')
    done
  args:
    executable: /bin/bash
  changed_when: false
  failed_when: false

- name: Prune unmanaged OUTPUT rules (iptables)
  shell: |
    iptables -S OUTPUT | grep -v 'DOCKER\|f2b\|ANSIBLE_OUTPUT' | grep '\-A OUTPUT' | while read rule; do
      iptables $(echo "$rule" | sed 's/^-A/-D/')
    done
  args:
    executable: /bin/bash
  changed_when: false
  failed_when: false

- name: Prune unmanaged OUTPUT rules (ip6tables)
  shell: |
    ip6tables -S OUTPUT | grep -v 'DOCKER\|f2b\|ANSIBLE_OUTPUT' | grep '\-A OUTPUT' | while read rule; do
      ip6tables $(echo "$rule" | sed 's/^-A/-D/')
    done
  args:
    executable: /bin/bash
  changed_when: false
  failed_when: false

- name: Set INPUT policy to DROP (iptables)
  command: iptables -P INPUT {{ ansible_policy_ipv4_input | default('DROP') }}
  register: input_policy_v4
  changed_when: input_policy_v4.rc == 0

- name: Set FORWARD policy to DROP (iptables)
  command: iptables -P FORWARD {{ ansible_policy_ipv4_forward | default('DROP') }}
  register: forward_policy_v4
  changed_when: forward_policy_v4.rc == 0

- name: Set OUTPUT policy to ACCEPT (iptables)
  command: iptables -P OUTPUT {{ ansible_policy_ipv4_output | default('ACCEPT') }}
  register: output_policy_v4
  changed_when: output_policy_v4.rc == 0

- name: Set INPUT policy to DROP (ip6tables)
  command: ip6tables -P INPUT {{ ansible_policy_ipv6_input | default('DROP') }}
  register: input_policy_v6
  changed_when: input_policy_v6.rc == 0

- name: Set FORWARD policy to DROP (ip6tables)
  command: ip6tables -P FORWARD {{ ansible_policy_ipv6_forward | default('DROP') }}
  register: forward_policy_v6
  changed_when: forward_policy_v6.rc == 0

- name: Set OUTPUT policy to ACCEPT (ip6tables)
  command: ip6tables -P OUTPUT {{ ansible_policy_ipv6_output | default('ACCEPT') }}
  register: output_policy_v6
  changed_when: output_policy_v6.rc == 0

- name: Save iptables rules
  shell: iptables-save > /etc/iptables/rules.v4
  when: create_ansible_input_v4.changed or create_ansible_output_v4.changed or input_policy_v4.changed or forward_policy_v4.changed or output_policy_v4.changed

- name: Save ip6tables rules
  shell: ip6tables-save > /etc/iptables/rules.v6
  when: create_ansible_input_v6.changed or create_ansible_output_v6.changed or input_policy_v6.changed or forward_policy_v6.changed or output_policy_v6.changed
