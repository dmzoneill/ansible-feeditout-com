- name: Define Apache module lists
  set_fact:
    broken_apache_modules:
      - name: mpm_prefork
        package: null
      - name: qos
        package: libapache2-mod-qos
      - name: evasive
        package: libapache2-mod-evasive
      - name: geoip
        package: libapache2-mod-geoip
      - name: php
        package: libapache2-mod-php8.2
    required_apache_modules:
      - name: mpm_event
        package: apache2
      - name: proxy
        package: apache2
      - name: proxy_fcgi
        package: apache2
      - name: setenvif
        package: apache2

- name: Ensure /etc/apache2 exists
  file:
    path: /etc/apache2
    state: directory
    mode: '0755'

- name: Copy Apache config
  copy:
    src: "{{ role_path }}/files/"
    dest: /etc/apache2/
    owner: root
    group: root
    mode: preserve
    directory_mode: '0755'
  notify: restart apache2

- name: Disable broken Apache modules by removing .load files
  file:
    path: "/etc/apache2/mods-enabled/{{ mod.name }}.load"
    state: absent
  loop: "{{ broken_apache_modules }}"
  loop_control:
    loop_var: mod
  changed_when: false
  failed_when: false

- name: Remove broken Apache modules' .conf files
  file:
    path: "/etc/apache2/mods-enabled/{{ mod.name }}.conf"
    state: absent
  loop: "{{ broken_apache_modules }}"
  loop_control:
    loop_var: mod
  changed_when: false
  failed_when: false

- name: Remove broken Apache module packages if installed
  apt:
    name: "{{ mod.package }}"
    state: absent
  when: mod.package is not none
  loop: "{{ broken_apache_modules }}"
  loop_control:
    loop_var: mod
  changed_when: false

- name: Enable required Apache modules
  apache2_module:
    name: "{{ required_mod.name }}"
    state: present
  loop: "{{ required_apache_modules }}"
  loop_control:
    loop_var: required_mod
  notify: restart apache2

- name: Enable required Apache modules
  apache2_module:
    name: "{{ required_mod.name }}"
    state: present
  loop: "{{ required_apache_modules }}"
  loop_control:
    loop_var: required_mod
  notify: restart apache2

- name: Ensure Apache2 is started and enabled
  service:
    name: apache2
    state: started
    enabled: true
