---
- name: Ensure prometheus group exists
  ansible.builtin.group:
    name: prometheus
    state: present

- name: Ensure prometheus user exists
  ansible.builtin.user:
    name: prometheus
    group: prometheus
    shell: /usr/sbin/nologin
    system: true
    create_home: false

- name: Create required directories
  ansible.builtin.file:
    path: "{{ prometheus_dir }}"
    state: directory
    owner: prometheus
    group: prometheus
    mode: '0755'
  loop:
    - /etc/prometheus
    - /var/lib/prometheus
    - /etc/prometheus/rules
    - /etc/prometheus/file_sd
  loop_control:
    loop_var: prometheus_dir

- name: Download Prometheus tarball
  ansible.builtin.get_url:
    url: "{{ prometheus_download_url }}"
    dest: "/tmp/prometheus.tar.gz"
    mode: '0644'
  register: prometheus_download
  tags: prometheus

- name: Extract Prometheus
  ansible.builtin.unarchive:
    src: "/tmp/prometheus.tar.gz"
    dest: /opt
    remote_src: yes
    creates: "/opt/{{ prometheus_extracted_dir }}"
  tags: prometheus

- name: Create symlink to /opt/prometheus
  ansible.builtin.file:
    src: "/opt/{{ prometheus_extracted_dir }}"
    dest: /opt/prometheus
    state: link
    force: true

- name: Copy Prometheus binaries
  ansible.builtin.copy:
    src: "/opt/{{ prometheus_extracted_dir }}/{{ binary }}"
    dest: "/usr/local/bin/{{ binary }}"
    remote_src: yes
    mode: '0755'
  loop:
    - prometheus
    - promtool
  loop_control:
    loop_var: binary

- name: Install systemd service
  ansible.builtin.template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    mode: '0644'
  notify: Restart Prometheus

- name: Ensure Prometheus rules directory exists
  ansible.builtin.file:
    path: /etc/prometheus/rules
    state: directory
    owner: prometheus
    group: prometheus
    mode: '0755'

- name: Copy Prometheus alert rules from awesome-prometheus-alerts
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/samber/awesome-prometheus-alerts/master/dist/rules/{{ rule }}/embedded-exporter.yml"
    dest: "/etc/prometheus/rules/{{ rule }}.rules.yml"
    mode: '0644'
    owner: prometheus
    group: prometheus
  loop:
    - apache
    - apc-ups
    - argocd
    - blackbox
    - caddy
    - cassandra
    - ceph
    - clickhouse
    - cloudflare
    - consul
    - coredns
    - cortex
    - docker-containers
    - elasticsearch
    - etcd
    - fluxcd
    - freeswitch
    - grafana-alloy
    - graph-node
    - hadoop
    - haproxy
    - hashicorp-vault
    - host-and-hardware
    - istio
    - jenkins
    - juniper
    - jvm
    - kafka
    - kubernetes
    - linkerd
    - loki
    - meilisearch
    - minio
    - mongodb
    - mysql
    - nats
    - netdata
    - nginx
    - nomad
    - openebs
    - patroni
    - pgbouncer
    - php-fpm
    - postgresql
    - prometheus-self-monitoring
    - promtail
    - pulsar
    - rabbitmq
    - redis
    - s.m.a.r.t-device-monitoring
    - sidekiq
    - solr
    - speedtest
    - sql-server
    - ssl/tls
    - thanos
    - traefik
    - vmware
    - windows-server
    - zfs
    - zookeeper
  loop_control:
    loop_var: rule
  tags: prometheus, alert_rules


# - name: Create cert directory for Prometheus TLS
#   ansible.builtin.file:
#     path: /etc/prometheus/certs
#     state: directory
#     owner: prometheus
#     group: prometheus
#     mode: '0755'
#   when: prometheus_tls_enabled

# - name: Copy TLS certs for Prometheus
#   ansible.builtin.copy:
#     src: "/etc/letsencrypt/live/{{ fqdn }}/{{ cert_file }}"
#     dest: "/etc/prometheus/certs/{{ cert_file }}"
#     remote_src: yes
#     owner: prometheus
#     group: prometheus
#     mode: '0600'
#   loop:
#     - fullchain.pem
#     - privkey.pem
#   loop_control:
#     loop_var: cert_file
#   when: prometheus_tls_enabled
#   notify: Restart Prometheus

- name: Copy Prometheus config
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    owner: prometheus
    group: prometheus
    mode: '0644'
  notify: Restart Prometheus

# - name: Configure Prometheus TLS web_config.yml
#   ansible.builtin.template:
#     src: web_config.yml.j2
#     dest: /etc/prometheus/web_config.yml
#     owner: prometheus
#     group: prometheus
#     mode: '0644'
#   when: prometheus_tls_enabled
#   notify: Restart Prometheus

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable and start Prometheus
  ansible.builtin.systemd:
    name: prometheus
    enabled: yes
    state: started
